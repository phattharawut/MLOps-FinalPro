name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linters (and deps if requirements.txt exists)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install ruff black

      - name: Ruff (lint + fix)
        run: ruff check . --fix

      - name: Black (format)
        run: black .

      - name: Black (verify)
        run: black --check .

  test:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns
      MPLBACKEND: Agg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install test dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install mlflow pandas numpy scikit-learn joblib matplotlib openpyxl pytest

      - name: Run pytest
        run: pytest -q

  mlops-pipeline:
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns
      MPLBACKEND: Agg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow pandas numpy scikit-learn joblib matplotlib openpyxl

      - name: Run Data Validation
        run: python mlops_pipeline/script/01_data_validation.py

      - name: Run Data Preprocessing
        run: python mlops_pipeline/script/02_data_preprocessing.py

      - name: Get preprocessing run ID
        id: get_run_id
        run: |
          RUN_ID=$(python -c "import mlflow; client = mlflow.tracking.MlflowClient(); runs = client.search_runs('2'); print(runs[0].info.run_id if runs else '')")
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Train and Register Model
        run: python mlops_pipeline/script/03_train_evaluate_register.py ${{ steps.get_run_id.outputs.run_id }}

      - name: Transition Model
        run: python mlops_pipeline/script/04_transition_model.py

      - name: Upload MLflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: mlruns/
